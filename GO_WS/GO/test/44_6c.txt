WARN  (TestAllState2.java:214) - after choose Min best move only! [2,0] search
WARN  (TestAllState2.java:215) - INIT (variant=21, score = 1, Max) 
(B[1,1] (variant=20, score = 1, Min) W[2,2] (variant=20, score = 1, Max) 
	(B[PAS] (variant=1, score = 0, Min) W[PAS] (variant=1, score = 0, Max) )
	(B[1,2] (variant=19, score = 1, Min) W[PAS] (variant=19, score = 1, Max) 
		(B[PAS] (variant=1, score = 1, Min) )
		(B[2,1] (variant=18, score = -1, Min) W[2,2] (variant=18, score = -1, Max) 
			(B[1,1] (variant=15, score = -1, Min) W[1,2] (variant=15, score = -1, Max) 
				(B[2,1] (variant=14, score = -1, Min) W[1,2] (variant=14, score = -1, Max) 
					(B[2,2] (variant=11, score = -1, Min) W[1,2] (variant=11, score = -1, Max) 
						(B[2,1] (variant=8, score = -1, Min) W[1,1] (variant=8, score = -1, Max) 
							(B[2,2] (variant=7, score = -1, Min) W[1,1] (variant=7, score = -1, Max) 
								(B[1,2] (variant=4, score = -1, Min) W[1,1] (variant=4, score = -1, Max) 
									(B[2,2] (variant=1, score = -1, Min) W[1,2] (variant=1, score = -1, Max) B[PAS] (variant=1, score = -1, Min) W[PAS] (variant=1, score = -1, Max) )
									(B[1,2] (variant=1, score = -4, Min) W[2,2] (variant=1, score = -4, Max) B[PAS] (variant=1, score = -4, Min) W[PAS] (variant=1, score = -4, Max) )
									(B[2,1] (variant=1, score = -4, Min) W[2,2] (variant=1, score = -4, Max) B[PAS] (variant=1, score = -4, Min) W[PAS] (variant=1, score = -4, Max) )
									(B[PAS] (variant=1, score = -4, Min) W[PAS] (variant=1, score = -4, Max) ))
								(B[PAS] (variant=3, score = -1, Min) W[1,2] (variant=3, score = -1, Max) 
									(B[2,1] (variant=1, score = -1, Min) W[PAS] (variant=1, score = -1, Max) B[PAS] (variant=1, score = -1, Min) )
									(B[2,2] (variant=1, score = -1, Min) W[PAS] (variant=1, score = -1, Max) B[PAS] (variant=1, score = -1, Min) )
									(B[PAS] (variant=1, score = -4, Min) W[PAS] (variant=1, score = -4, Max) )))
							(B[PAS] (variant=1, score = -1, Min) W[PAS] (variant=1, score = -1, Max) ))
						(B[1,1] (variant=1, score = -4, Min) W[2,1] (variant=1, score = -4, Max) B[PAS] (variant=1, score = -4, Min) W[PAS] (variant=1, score = -4, Max) )
						(B[2,2] (variant=1, score = -4, Min) W[2,1] (variant=1, score = -4, Max) B[PAS] (variant=1, score = -4, Min) W[PAS] (variant=1, score = -4, Max) )
						(B[PAS] (variant=1, score = -4, Min) W[PAS] (variant=1, score = -4, Max) ))
					(B[PAS] (variant=3, score = -1, Min) W[2,2] (variant=3, score = -1, Max) 
						(B[1,1] (variant=1, score = -4, Min) W[2,1] (variant=1, score = -4, Max) B[PAS] (variant=1, score = -4, Min) W[PAS] (variant=1, score = -4, Max) )
						(B[2,1] (variant=1, score = -1, Min) W[PAS] (variant=1, score = -1, Max) B[PAS] (variant=1, score = -1, Min) )
						(B[PAS] (variant=1, score = -4, Min) W[PAS] (variant=1, score = -4, Max) )))
				(B[PAS] (variant=1, score = -1, Min) W[PAS] (variant=1, score = -1, Max) ))
			(B[1,2] (variant=1, score = -4, Min) W[1,1] (variant=1, score = -4, Max) B[PAS] (variant=1, score = -4, Min) W[PAS] (variant=1, score = -4, Max) )
			(B[2,1] (variant=1, score = -4, Min) W[1,1] (variant=1, score = -4, Max) B[PAS] (variant=1, score = -4, Min) W[PAS] (variant=1, score = -4, Max) )
			(B[PAS] (variant=1, score = -4, Min) W[PAS] (variant=1, score = -4, Max) ))))
(B[PAS] (variant=1, score = 0, Min) W[PAS] (variant=1, score = 0, Max) )

[4,-4]search:
WARN  (TestAllState2.java:214) - after choose Min best move only!
WARN  (TestAllState2.java:215) - INIT (variant=25, score = 1, Max) 

(B[1,1] (variant=15, score = 1, Min) W[2,2] (variant=15, score = 1, Max) 
	(B[PAS] (variant=7, score = -1, Min) W[1,2] (variant=7, score = -1, Max) 
		(B[2,1] (variant=6, score = -1, Min) W[2,2] (variant=6, score = -1, Max) 
			(B[1,2] (variant=3, score = -4, Min) W[2,2] (variant=3, score = -4, Max) 
				(B[1,2] (variant=1, score = -4, Min) W[1,1] (variant=1, score = -4, Max) B[PAS] (variant=1, score = -4, Min) W[PAS] (variant=1, score = -4, Max) )
				(B[2,1] (variant=1, score = -4, Min) W[1,1] (variant=1, score = -4, Max) B[PAS] (variant=1, score = -4, Min) W[PAS] (variant=1, score = -4, Max) )
				(B[PAS] (variant=1, score = -4, Min) W[PAS] (variant=1, score = -4, Max) ))
			(B[PAS] (variant=3, score = -1, Min) W[1,2] (variant=3, score = -1, Max) 
				(B[1,1] (variant=1, score = -4, Min) W[2,1] (variant=1, score = -4, Max) B[PAS] (variant=1, score = -4, Min) W[PAS] (variant=1, score = -4, Max) )
				(B[2,1] (variant=1, score = -1, Min) W[PAS] (variant=1, score = -1, Max) B[PAS] (variant=1, score = -1, Min) )
				(B[PAS] (variant=1, score = -4, Min) W[PAS] (variant=1, score = -4, Max) )))
		(B[PAS] (variant=1, score = -4, Min) W[2,1] (variant=1, score = -4, Max) B[PAS] (variant=1, score = -4, Min) W[PAS] (variant=1, score = -4, Max) ))
	(B[1,2] (variant=8, score = 1, Min) W[2,1] (variant=8, score = 1, Max) 
		(B[1,1] (variant=1, score = -4, Min) W[1,2] (variant=1, score = -4, Max) B[PAS] (variant=1, score = -4, Min) W[PAS] (variant=1, score = -4, Max) )
		(B[1,2] (variant=6, score = 1, Min) W[PAS] (variant=6, score = 1, Max) 
			(B[PAS] (variant=1, score = -1, Min) )
			(B[1,1] (variant=5, score = 1, Min) W[2,2] (variant=5, score = 1, Max) 
				(B[2,1] (variant=4, score = -4, Min) W[2,2] (variant=4, score = -4, Max) 
					(B[1,1] (variant=1, score = -4, Min) W[2,1] (variant=1, score = -4, Max) B[PAS] (variant=1, score = -4, Min) W[1,2] (variant=1, score = -4, Max) B[PAS] (variant=1, score = -4, Min) W[PAS] (variant=1, score = -4, Max) )
					(B[1,2] (variant=1, score = -4, Min) W[1,1] (variant=1, score = -4, Max) B[PAS] (variant=1, score = -4, Min) W[PAS] (variant=1, score = -4, Max) )
					(B[2,1] (variant=1, score = -4, Min) W[1,1] (variant=1, score = -4, Max) B[PAS] (variant=1, score = -4, Min) W[PAS] (variant=1, score = -4, Max) )
					(B[PAS] (variant=1, score = -4, Min) W[PAS] (variant=1, score = -4, Max) ))
				(B[PAS] (variant=1, score = 1, Min) W[PAS] (variant=1, score = 1, Max) )))
		(B[PAS] (variant=1, score = -4, Min) W[PAS] (variant=1, score = -4, Max) )))
(B[PAS] (variant=10, score = -1, Min) W[1,1] (variant=10, score = -1, Max) 
	(B[2,2] (variant=8, score = -1, Min) W[1,2] (variant=8, score = -1, Max) 
		(B[2,1] (variant=7, score = -1, Min) W[1,2] (variant=7, score = -1, Max) 
			(B[1,1] (variant=4, score = -1, Min) W[1,2] (variant=4, score = -1, Max) 
				(B[2,1] (variant=1, score = -1, Min) W[1,1] (variant=1, score = -1, Max) B[PAS] (variant=1, score = -1, Min) W[PAS] (variant=1, score = -1, Max) )
				(B[1,1] (variant=1, score = -4, Min) W[2,1] (variant=1, score = -4, Max) B[PAS] (variant=1, score = -4, Min) W[PAS] (variant=1, score = -4, Max) )
				(B[2,2] (variant=1, score = -4, Min) W[2,1] (variant=1, score = -4, Max) B[PAS] (variant=1, score = -4, Min) W[PAS] (variant=1, score = -4, Max) )
				(B[PAS] (variant=1, score = -4, Min) W[PAS] (variant=1, score = -4, Max) ))
			(B[PAS] (variant=3, score = -1, Min) W[1,1] (variant=3, score = -1, Max) 
				(B[2,1] (variant=1, score = -1, Min) W[PAS] (variant=1, score = -1, Max) B[PAS] (variant=1, score = -1, Min) )
				(B[2,2] (variant=1, score = -1, Min) W[PAS] (variant=1, score = -1, Max) B[PAS] (variant=1, score = -1, Min) )
				(B[PAS] (variant=1, score = -4, Min) W[PAS] (variant=1, score = -4, Max) )))
		(B[PAS] (variant=1, score = -1, Min) W[PAS] (variant=1, score = -1, Max) ))
	(B[1,2] (variant=1, score = -4, Min) W[2,2] (variant=1, score = -4, Max) B[PAS] (variant=1, score = -4, Min) W[PAS] (variant=1, score = -4, Max) )
	(B[PAS] (variant=1, score = -4, Min) W[PAS] (variant=1, score = -4, Max) ))
