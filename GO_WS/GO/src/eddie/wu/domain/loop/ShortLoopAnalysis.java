package eddie.wu.domain.loop;

/**
 * 打劫的处理非常重要，现在没有显式地处理打劫；如果实际变化中发生了打劫，就会陷入死循环。<br/>
 * 一个例子就是征子计算中出现的打劫循环。<br/>
 * 首先处理不允许立刻提回劫的基本规则，将来再考虑禁止全局同形再现。<br/>
 * 如何翻译打劫？热子禁提（hot point). 暂时成为ShortLoop。因为这是最短的循环（涉及局面最少，仅有两个）<br/>
 * 长生劫的循环有四个局面，三劫循环则更多。<br/>
 * 一个是在局面进行中防止不找劫材直接提劫。相关的代码在forwardbackward类中<br/>
 * 另一个是计算过程对打劫的局面做出判断。可能分散在其他的类中。 <br/>
 * 打劫的特点是提对方一子，同时本方的落子仅有一气。对方可以立即回提。
 * 
 * 这个类可能只是作为一个集中文档化的所在。<br/>
 * 劫在死活和对杀中常见；在征子中较为少见，主要是因为有本身劫材的关系；但是编程时必须处理，否则出现死循环。<br/>
 * 原先的征子代码太繁琐，考虑重写。
 * 
 * 
 * 
 * @author Eddie
 * 
 */
public class ShortLoopAnalysis {

}
